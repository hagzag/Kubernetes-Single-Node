---
- name: "Assures addons dir exists"
  file: 
   path: "{{ kube_addons_dir }}" 
   state: directory

- name: "Set pyyaml package name"
  set_fact:
    pyyaml_name: python-yaml

- name: "Install PyYAML for non-debian"
  action: "{{ ansible_pkg_mgr }}"
  args:
    name: "{{ pyyaml_name }}"
    state: latest

- name: "Assures local addon dir exists"
  local_action: file
    path={{ local_temp_addon_dir }} state=directory
  become: no

- name: "Make sure the system services namespace exists"
  copy:
    src: common/namespace.yaml
    dest: "{{ kube_config_dir }}/addons/namespace.yaml"

- name: "Install DNS addon"
  include: dns.yml

- name: "Install kubernetes cluster monitoring addon"
  include: cluster-monitoring.yml

- name: "Install kubernetes loggin monitoring addon"
  include: cluster-logging.yml

- name: "Install UI addon"
  include: kube-ui.yml

- name: "Install dashboard addon"
  include: kube-dash.yml

- name: "Get kube-addons script from Kubernetes"
  copy:
    src: "common/kube-addons.sh"
    dest: "{{ kube_script_dir }}/kube-addons.sh" 
    mode: 0755
  notify:
  - restart kube-addons

- name: "Get kube-addon-update script from Kubernetes"
  copy:
    src: "common/kube-addon-update.sh"
    dest: "{{ kube_script_dir }}/kube-addon-update.sh" 
    mode: 0755
  notify:
    - restart kube-addons

- name: "Run kube-gen-token script to create {{ kube_token_dir }}/known_tokens.csv"
  command: "{{ kube_script_dir }}/kube-gen-token.sh {{ item }}"
  environment:
    TOKEN_DIR: "{{ kube_token_dir }}"
  with_items:
  - "system:dns"
  - "system:monitoring"
  - "system:logging"
  register: gentoken
  changed_when: "'Added' in gentoken.stdout"
  notify:
  - restart apiserver
  - restart kube-addons

- name: Install kube-addons service
  template: 
    src: "kube-addons.service.j2" 
    dest: "/etc/systemd/system/kube-addons.service"
  notify:
    - reload and restart kube-addons
  when: not (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int < 15)

- name: "Install kube-addons upstart configuration"
  template: 
    src: "kube-addons.upstart.j2" 
    dest: "/etc/init/kube-addons.conf"
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int < 15

- name: "Enable and start kube addons"
  service: 
   name: kube-addons 
   enabled: yes 
   state: started
